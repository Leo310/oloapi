{
	"info": {
		"_postman_id": "9839ae2b-4425-40b2-bdc9-b983cbffea8b",
		"name": "oLo",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "user",
			"item": [
				{
					"name": "public",
					"item": [
						{
							"name": "Registers user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let randomEmail = pm.variables.replaceIn(\"{{$randomEmail}}\");",
											"pm.environment.set(\"email\", randomEmail);",
											"let randomUsername = pm.variables.replaceIn(\"{{$randomUserName}}\")",
											"pm.environment.set(\"username\", randomUsername);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{email}}\",\n    \"name\": \"{{username}}\",\n    \"password\": \"asdf23ASDF\",\n    \"locations\": [\n        {\n            \"osm_id\": 1552566808,\n            \"osm_type\": \"node\"\n        }\n    ]\n        \n}"
								},
								"url": {
									"raw": "localhost:3001/api/user/register",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"api",
										"user",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get specific limit of users",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.environment.set(\"uuid\", jsonData[0][\"uuid\"]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3001/api/user?limit=5",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"api",
										"user"
									],
									"query": [
										{
											"key": "limit",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get user data",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3001/api/user/:uuid",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"api",
										"user",
										":uuid"
									],
									"variable": [
										{
											"key": "uuid",
											"value": "{{uuid}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Login user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{email}}\",\n    \"password\": \"asdf23ASDF\"\n}"
								},
								"url": {
									"raw": "localhost:3001/api/user/login",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"api",
										"user",
										"login"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//clear cookies",
									"const jar = pm.cookies.jar();",
									"jar.clear(pm.request.url, function (error) {",
									"    if(error)",
									"        console.log(error)",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "private",
					"item": [
						{
							"name": "Get profile data",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3001/api/private/user/",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"api",
										"private",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update user",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{$randomEmail}}\",\n    \"name\": \"{{$randomUserName}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3001/api/private/user",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"api",
										"private",
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "localhost:3001/api/private/user/",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"api",
										"private",
										"user",
										""
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "item",
			"item": [
				{
					"name": "Get specific limit of items",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/item?limit=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"item"
							],
							"query": [
								{
									"key": "limit",
									"value": "<integer>",
									"description": "limit of users to get"
								}
							]
						}
					},
					"response": [
						{
							"name": "ok",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/item?limit=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"item"
									],
									"query": [
										{
											"key": "limit",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"safkljsklj2kl\",\n  \"name\": \"beamer\"\n },\n {\n  \"id\": \"safkljsklj2kl\",\n  \"name\": \"beamer\"\n }\n]"
						}
					]
				},
				{
					"name": "Creating item",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"<string>\",\n    \"description\": \"<string>\",\n    \"price\": \"<float>\",\n    \"category\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/item/create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"item",
								"create"
							]
						}
					},
					"response": [
						{
							"name": "ok",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Beamer\",\n    \"description\": \"Geiler beamer mit super tollen anschl√ºssen\",\n    \"price\": \"<float>\",\n    \"category\": 4\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/item/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"item",
										"create"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get item data",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/item/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"item",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) ID of the user or item"
								}
							]
						}
					},
					"response": [
						{
							"name": "ok",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/item/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"item",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"title\": \"Beamer\",\n \"description\": \"Geiler beamer mit super tollen anschl√ºssen\",\n \"price\": \"<float>\",\n \"category\": 4\n}"
						}
					]
				},
				{
					"name": "Update Item data",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"<string>\",\n    \"description\": \"<string>\",\n    \"price\": \"<float>\",\n    \"category\": \"<integer>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/item/put",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"item",
								"put"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) ID of the user or item"
								}
							]
						}
					},
					"response": [
						{
							"name": "ok",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Beamer\",\n    \"description\": \"Geiler beamer mit super tollen anschl√ºssen\",\n    \"price\": \"<float>\",\n    \"category\": 4\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/item/put",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"item",
										"put"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete item",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/item/delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"item",
								"delete"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) ID of the user or item"
								}
							]
						}
					},
					"response": [
						{
							"name": "ok",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/item/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"item",
										"delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});",
					"",
					"var jsonData = pm.response.json();",
					"//if status code is set in response and its not equal to zero, so there is an error",
					"if(jsonData[\"StatusCode\"] != undefined )",
					"{",
					"    if(jsonData[\"StatusCode\"] != 0)",
					"    {",
					"        //create debug test with error statusCode as output",
					"        tests[\"oLo statuscode = \" + jsonData.StatusCode] = false;",
					"    }    else",
					"        tests[\"oLo statuscode = NoError(0)\"] = true;",
					"} else",
					"    tests[\"oLo statuscode not set\"] = true;",
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "localhost:3000/api"
		}
	]
}